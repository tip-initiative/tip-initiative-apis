openapi: "3.0.0"

components:
 securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT 
security:
  - bearerAuth: []

info:
  version: 4.0.9
  title: Orders
  description: |
    * TODO
  termsOfService: http://placeholderdomain.io/terms/
  contact:
    name: todo
    email: mailing-list@tbd.com
    url: http://placeholderdomain.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://placeholderdomain.io

paths:
  /v1/orders/enumerate:
    post:
      summary: Enumerate Orders
      description: Request a collection of orders matching the provided query parameters
      operationId: enumerateOrders
      requestBody:
        description: EnumerateOrders
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/ordersSchemas.yaml#/components/schemas/enumerateOrdersQuery'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: 'schemas/ordersSchemas.yaml#/components/schemas/enumerateOrdersResponse'
        default:
          description: Unexpected error occured
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/create:
    post:
      summary: Create an Order
      description: Create an Order
      operationId: createOrder
      requestBody:
        description: createOrder
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
        default:
          description: Unexpected error occured
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/cancel/{sgsOrderId}:
    put:
      summary: Cancel an Order
      description: Cancel an Order
      operationId: cancelOrder
      parameters:
        - name: sgsOrderId
          in: path
          description: The SGS Order Id
          required: true
      requestBody:
        description: cancelOrder
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
        default:
          description: Unexpected error occured
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/revise/{sgsOrderId}:
    put:
      summary: Revise an Order
      description: Revise an order
      operationId: reviseOrder
      parameters:
        - name: sgsOrderId
          in: path
          description: The SGS Order Id
          required: true
      requestBody:
        description: reviseOrder
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
        default:
          description: Unexpected error occured
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/acknowledge:
      post:
        summary: Acknowledgement of order processing
        description: Acknowledgement of order processing
        operationId: acknowledgeOrder
        requestBody:
          description: acknowledge 
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '200':
            description: Request processed successfully
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Unexpected error occured
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/approve/{sgsOrderId}:
      post:
        summary: Receive events from SGS for accepted updates to an order
        description: Receive events for from SGS for accepted updates to an order
        operationId: approveOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order Id
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '200':
            description: Request processed successfully
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Unexpected error occured
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/confirm/{sgsOrderId}:
      post:
        summary: Confirm an Order
        description: Confirm an Order
        operationId: confirmOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order Id
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '200':
            description: Request processed successfully
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Unexpected error occured
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/notifyOpen/{sgsOrderId}:
      post:
        summary: Notify on Open Order
        description: Notify on Open Order
        operationId: notifyOpenOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order Id
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '200':
            description: Request processed successfully
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Unexpected error occured
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/reject/{sgsOrderId}:
      post:
        summary: Receive events from SGS for rejected updates to an order
        description: Receive events from SGS for rejected updates to an order
        operationId: rejectOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order Id
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '200':
            description: Request processed successfully
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Unexpected error occured
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'
          
  /v1/orders/subscribe:
      post:
          summary: Subscribe to order events
          description: Subscribe to order events
          operationId: ordersSubscribe
          requestBody:
            description: ordersSubscribe
            required: true
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: 'schemas/ordersSchemas.yaml#/components/schemas/ordersSubscribeSGS'
                    - $ref: 'schemas/ordersSchemas.yaml#/components/schemas/ordersSubscribeSGSCounterParty'
          responses:
            '200':
              description: Request processed successfully
              content:
                application/json:
                  schema:
                    $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            default:
              description: Unexpected error occured
              content:
                application/json:
                  schema:
                    $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'
          callbacks:
            acknowledgeOrderEvent:
              '{$request.body#/acknowledgeReceiptNotificationUrl}':
                post:
                  summary: Acknowledgement from either SGS or SGSCounterParty that the order has been processed
                  description: Acknowledgement from either SGS or SGSCounterParty that the order has been processed
                  requestBody:
                    description: acknowledgeReceiptNotificationUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            cancelOrderEvent:
              '{$request.body#/approveCancelOrderResponseUrl}':
                post:
                  summary: Event from SGS that the order has been cancelled 
                  description: Event from SGS that the order has been cancelled
                  requestBody:
                    description: approveCancelOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            createOrderEvent:
              '{$request.body#/approveCreateOrderResponseUrl}':
                post:
                  summary: Event from SGS that the order has been created
                  description: Event from SGS that the order has been created
                  requestBody:
                    description: approveCreateOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            reviseOrderEvent:
              '{$request.body#/approveReviseOrderResponseUrl}':
                post:
                  summary: Event from SGS that the order has been revised
                  description: Event from SGS that the order has been revised
                  requestBody:
                    description: approveReviseOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            orderConfirmationEvent:
              '{$request.body#/confirmConfirmOrderNotificationUrl}':
                post:
                  summary: Event from SGS that the order has been confirmed
                  description: Event from SGS that the order has been confirmed
                  requestBody:
                    description: approveReviseOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            openOrderEvent:
              '{$request.body#/confirmConfirmOrderNotificationUrl}':
                post:
                  summary: Event from SGS that the order has been opened
                  description: Event from SGS that the order has been opened
                  requestBody:
                    description: approveReviseOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            rejectCancelOrderEvent:
              '{$request.body#/rejectCancelOrderResponseUrl}':
                post:
                  summary: Event from SGS that the cancel order request was rejected
                  description: Event from SGS that the cancel order request was rejected
                  requestBody:
                    description: rejectCancelOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            rejectCreateOrderEvent:
              '{$request.body#/rejectCreateOrderResponseUrl}':
                post:
                  summary: Event from SGS that the create order request was rejected
                  description: Event from SGS that the create order request was rejected
                  requestBody:
                    description: rejectCreateOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            rejectReviseOrderEvent:
              '{$request.body#/rejectReviseOrderResponseUrl}':
                post:
                  summary: Event from SGS that the revise order request was rejected
                  description: Event from SGS that the revise order request was rejected
                  requestBody:
                    description: rejectReviseOrderResponseUrl callback
                    required: true
                    content:
                      application/json:
                        schema:
                          $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
                  responses:
                    '200':
                      description: Request processed successfully
                      content:
                        application/json:
                          schema:
                            $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
  /v1/orders/unsubscribe:
        delete:
          summary: Unsubscribe to order events
          description: Unsubscribe to order events
          operationId: ordersUnsubscribe
          requestBody:
            description: ordersUnsubscribe
            required: true
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: 'schemas/ordersSchemas.yaml#/components/schemas/ordersSubscribeSGS'
                    - $ref: 'schemas/ordersSchemas.yaml#/components/schemas/ordersSubscribeSGSCounterParty'
          responses:
            '200':
              description: Request processed successfully
              content:
                application/json:
                  schema:
                    $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
            default:
              description: Unexpected error occured
              content:
                application/json:
                  schema:
                    $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'