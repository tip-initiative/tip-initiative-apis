openapi: "3.0.0"

info:
  version: 1.0.0
  title: Orders Schemas
  description: Todo
  termsOfService: https://videa.tv/visitor/
  contact:
    name: Videa API
    email: apidocs@videa.tv
    url: https://videa.tv/
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.videa.tv

paths: {} # no paths

components:
  schemas:
    enumerateOrdersResponse:
      required:
        - ordersCollection
      description: Collection of orders to return to the UI
      properties:
        ordersCollection:
          type: array
          items:
            $ref: 'commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'

    enumerateOrdersQuery:
      description: Query parameters for requesting a collection of orders
      required:
        - CommonPayloadHeader
        - startDate
        - endDate
        - limitCount
      properties:
        CommonPayloadHeader:
          $ref: 'commonSchemas.yaml#/components/schemas/commonPayloadHeader'
        startDate:
          description: Start date of the range
          type: string
          format: date-time
        endDate:
          description: End date of the range
          type: string
          format: date-time
        limitCount: 
          description: Maximum number of items to return
          type: integer #TODO any constraints on this?
          format: int32

    ordersSubscriptionRequest:
      description: A client creates a subscription by issuing a request against the subscriptions resource. The subscription namespace is client-defined via the POST operation.
      required:
        - resource
        - notificationUrl
      properties:
        resource:
          description: Resource path to watch
          type: string
          enum: [AcknowledgeReceiptNotification, CancelOrderResponse, CancelOrderResponse, ConfirmOrderNotification, CreateOrderResponse, OpenOrderNotification, ReviseOrderResponse]
        notificationUrl:
          description: The target web hook URL
          type: string
          format: uri
        clientState:
          description: Opaque string passed back to the client on all notifications. Callers may choose to use this to provide tagging mechanisms.
          type: string